/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TrabajoPractico6.Menu;
import TrabajoPractico6.Directorio.*;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Aryl
 */
public class VistaBuscarClientes extends javax.swing.JInternalFrame {

    HashMap<String, Cliente> directorio;
    /**
     * Creates new form VistaBuscarClientes
     */
    public VistaBuscarClientes(HashMap<String, Cliente> directorio) {
        initComponents();
        
        this.directorio = directorio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jTTelefono = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTDni = new javax.swing.JTextField();
        jTApellido = new javax.swing.JTextField();
        jTNombre = new javax.swing.JTextField();
        jTCiudad = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jBBuscar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 51));

        jPanel.setBackground(new java.awt.Color(0, 0, 102));
        jPanel.setMinimumSize(new java.awt.Dimension(394, 444));
        jPanel.setPreferredSize(new java.awt.Dimension(394, 455));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Teléfono");

        jTTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTelefonoFocusLost(evt);
            }
        });
        jTTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTelefonoActionPerformed(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 3, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Buscar Clientes");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DNI");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellido");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ciudad");

        jTDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDniActionPerformed(evt);
            }
        });

        jBBuscar.setBackground(new java.awt.Color(0, 102, 0));
        jBBuscar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jBBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Fernández Rodríguez, Agostina Ailén");

        jButton1.setBackground(new java.awt.Color(153, 0, 0));
        jButton1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jBLimpiar.setBackground(new java.awt.Color(0, 102, 0));
        jBLimpiar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jBLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTDni, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(jTApellido)
                            .addComponent(jTNombre)
                            .addComponent(jTCiudad)
                            .addComponent(jTTelefono)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jBLimpiar)
                        .addGap(31, 31, 31)
                        .addComponent(jBBuscar)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBBuscar)
                    .addComponent(jButton1)
                    .addComponent(jBLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTelefonoActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTTelefonoActionPerformed

    private void jTDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDniActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTDniActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        
        String ciudad = jTCiudad.getText();
        String telefono = jTTelefono.getText();
        String dni = jTDni.getText();
        String apellido = jTApellido.getText();
        
        /* El filtro de elementos, al ser utilizado en una misma vista, ha sido
        implementado por orden de prioridad considerando que lo más importante era
        el número de teléfono por ser único, luego el DNI, considerando los posibles
        números pertenecientes a la misma persona, seguido del apellido y finalmente
        la ciudad.
        
        Se consideró como un sistema en el que puedan ingresar múltiples datos y utilizar
        filtros de poco a muy específicos.
        
        Después de evaluar el tipo de dato ingresado se realiza un segundo filtro que 
        determina si el dato ingresado existe, y luego se finaliza con un filtro de 
        datos, si ningún valor coincide con el dato ingresado, se informa. */
        
        if ("".equals(ciudad) && "".equals(telefono) && "".equals(dni) && "".equals(apellido)){
            JOptionPane.showMessageDialog(null, "Ingrese un teléfono, ciudad o DNI para continuar");
        } else if (!"".equals(telefono)) {
            if(directorio.containsKey(telefono)){
                if ("".equals(ciudad) && "".equals(dni) && "".equals(apellido)) {
                    jTTelefono.setText(telefono);
                    jTDni.setText(directorio.get(telefono).getDni());
                    jTApellido.setText(directorio.get(telefono).getApellido());
                    jTNombre.setText(directorio.get(telefono).getNombre());
                    jTCiudad.setText(directorio.get(telefono).getCiudad());
                } else if (!"".equals(ciudad) && !ciudad.equals(directorio.get(telefono).getCiudad())) {
                    JOptionPane.showMessageDialog(null, "El teléfono no coincide con la ciudad");
                } else if (!"".equals(dni) && !dni.equals(directorio.get(telefono).getDni())){
                    JOptionPane.showMessageDialog(null, "El teléfono no coincide con el Documento");
                } else if (!"".equals(apellido) && !apellido.equals(directorio.get(telefono).getApellido())){
                    JOptionPane.showMessageDialog(null, "El teléfono no coincide con el Apellido");
                } else {
                    jTTelefono.setText(telefono);
                    jTDni.setText(directorio.get(telefono).getDni());
                    jTApellido.setText(directorio.get(telefono).getApellido());
                    jTNombre.setText(directorio.get(telefono).getNombre());
                    jTCiudad.setText(directorio.get(telefono).getCiudad());
                }
            } else {
                JOptionPane.showMessageDialog(null, "Número de teléfono no registrado");
            }
        } else if (!"".equals(dni)) {
            int control = 0;
            String cadena = "";
            String tel = "";
            
            for(Map.Entry<String, Cliente> e:directorio.entrySet()){
                if(e.getValue().getDni().equals(dni)){
                    control++;
                    tel = e.getKey();
                    cadena = cadena + '\n' + e.getKey() + '\n' + e.toString() + '\n';
                }
            }
            
            if(control == 0) {
                JOptionPane.showMessageDialog(null, "Documento no encontrado");
            } else {
                if(!"".equals(apellido) && ciudad.equals(directorio.get(tel).getApellido())){
                    JOptionPane.showMessageDialog(null, "Apellido no correspondiente al documento");
                } else if (!"".equals(ciudad) && ciudad.equals(directorio.get(tel).getCiudad())) {
                    JOptionPane.showMessageDialog(null, "Persona no encontrada en dicha ciudad");
                } else {
                    if (control > 1) {
                        /* Prometo usar tablas cuando las aprenda, al menos de esta forma
                        pueden verse más de un valor a la vez */
                        
                        JOptionPane.showMessageDialog(null, "Se han encontrado " + 
                            control + " coincidencias:\n\n" + cadena);
                    } else { 
                        
                        /* Sólo si es un único valor se cargarán los cuadros de texto */
                        
                        jTTelefono.setText(tel);
                        jTDni.setText(dni);
                        jTApellido.setText(directorio.get(tel).getApellido());
                        jTNombre.setText(directorio.get(tel).getNombre());
                        jTCiudad.setText(directorio.get(tel).getCiudad());
                    }
                }
            }
            
        } else if (!"".equals(apellido)){
            ArrayList<Cliente> clientesCiudad = MenuPrincipal.getDirectorio().buscarClientes(ciudad);
            ArrayList<Cliente> coincidencias;
            coincidencias = new ArrayList<>();
            String tel = "";
            
            int control = 0;
            String cadena = "";
            
            for (int i = 0 ; i < clientesCiudad.size() ; i++) {
                if (apellido.equals(clientesCiudad.get(i).getApellido())){
                    coincidencias.add(clientesCiudad.get(i));
                }
            }
            
            for(Map.Entry<String, Cliente> e:directorio.entrySet()){
                if(e.getValue().getApellido().equals(apellido)){
                    control++;
                    cadena = cadena + '\n' + e.getKey() + '\n' + e.toString() + '\n';
                    tel = e.getKey();
                }
            }
            
            if (control == 0) {
                JOptionPane.showMessageDialog(null, "Cliente no encontrado");
            } else {
                if (!"".equals(ciudad) && coincidencias.size() == 0){
                    JOptionPane.showMessageDialog(null, "No existen coincidencias");
                } else if (!"".equals(ciudad) && coincidencias.size() > 1) {
                    JOptionPane.showMessageDialog(null, coincidencias.toString());
                } else if (control > 1 || coincidencias.size() > 1) {
                    JOptionPane.showMessageDialog(null, cadena);
                } else if (control == 1 || coincidencias.size() == 1) {
                    jTTelefono.setText(tel);
                    jTDni.setText(dni);
                    jTApellido.setText(directorio.get(tel).getApellido());
                    jTNombre.setText(directorio.get(tel).getNombre());
                    jTCiudad.setText(directorio.get(tel).getCiudad());
                }
            }
        } else {
            ArrayList<Cliente> clientes = MenuPrincipal.getDirectorio().buscarClientes(ciudad);
            String tel = "";
            String cadena = "";
            
            for(Map.Entry<String, Cliente> e:directorio.entrySet()){
                if(e.getValue().getApellido().equals(apellido)){
                    cadena = cadena + '\n' + e.getKey() + '\n' + e.toString() + '\n';
                    tel = e.getKey();
                }
            }
            
            if (clientes.size() == 0){
                JOptionPane.showMessageDialog(null, "Sin datos");
            } else if (clientes.size() > 1) {
                JOptionPane.showMessageDialog(null, "Se encontraron " + clientes.size() + " coincidencias\n\n" + clientes.toString());
            } else {
                jTTelefono.setText(tel);
                jTDni.setText(clientes.get(0).getDni());
                jTApellido.setText(clientes.get(0).getApellido());
                jTNombre.setText(clientes.get(0).getNombre());
                jTCiudad.setText(clientes.get(0).getCiudad());
            }
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        // TODO add your handling code here:
        
        jTTelefono.setText("");
        jTDni.setText("");
        jTApellido.setText("");
        jTNombre.setText("");
        jTCiudad.setText("");
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTelefonoFocusLost
        // TODO add your handling code here:
        if (!"".equals(jTTelefono.getText())){
            try {
                long x = Long.parseLong(jTTelefono.getText());
            } catch (NumberFormatException nf){
                JOptionPane.showMessageDialog(null,"Sólo valores numéricos");
            }
        }
    }//GEN-LAST:event_jTTelefonoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTCiudad;
    private javax.swing.JTextField jTDni;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTextField jTTelefono;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
